@page "/authentication/login"
@using Models
@using Application.Services
@inject IAuthService AuthService
@inject NavigationManager NavigationManager



@if (ShowErrors)
{
    <div class="alert alert-danger" role="alert">
        <p>@Error</p>
    </div>
}

<div class="form-signin w-100 m-auto text-center">
    <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
        <img class="mb-4" src="/assets/logo.png" alt="" width="72" height="72">
        <h1 class="h3 mb-3 fw-normal">Please sign in</h1>

        <div class="form-floating">
          <InputText type="text" class="form-control" id="floatingInput" @bind-Value="loginModel.Email" placeholder="username" />
          <label for="floatingInput">Username</label>
          <ValidationMessage For="@(() => loginModel.Email)" />
            
        </div>
        <div class="form-floating">
          <InputText type="password" class="form-control" id="floatingPassword" @bind-Value="loginModel.Password" placeholder="Password" />
          <label for="floatingPassword">Password</label>
          <ValidationMessage For="@(() => loginModel.Password)" />
        </div>

        <div class="checkbox mb-3">
          <label>
            <input type="checkbox" value="remember-me"> Remember me
          </label>
        </div>
        <button class="w-100 btn btn-lg btn-primary" type="submit">Sign in</button>
        <p class="mt-5 mb-3 text-muted">© 2017–2022</p>
    </EditForm>
</div>

@code {

    private LoginModel loginModel = new LoginModel();
    private bool ShowErrors;
    private string Error = "";

    private async Task HandleLogin()
    {
        ShowErrors = false;

        var result = await AuthService.Login(loginModel);

        if (result.Successful)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            Error = result.Error;
            ShowErrors = true;
        }
    }

}